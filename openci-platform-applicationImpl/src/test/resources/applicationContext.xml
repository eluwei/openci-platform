<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!-- Instructs Spring to perfrom declarative transaction managemenet on 
		annotated classes -->
	<tx:annotation-driven transaction-manager="transactionManager_opencis" />
	
	<!-- Drives transactions using local JPA APIs -->
	<bean id="transactionManager_opencis" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- Creates a EntityManagerFactory for use with the Hibernate JPA provider 
		and a simple in-memory data source populated with test data -->
	<bean id="entityManagerFactory" class="org.openkoala.koala.util.KoalaEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="opencis" />
		<property name="packagesToScan">
			<list>
				<value>com.xiaokaceng.openci.domain</value>
			</list>
		</property>

		<property name="scanMappingResourceDir" value="mappings" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="${db.type}"></property>
				<property name="showSql" value="${hibernate.show_sql}"></property>
				<property name="generateDdl" value="true"></property>
				<property name="databasePlatform" value="${hibernate.dialect}"></property>
			</bean>
		</property>
	</bean>

	<bean id="repository" class="org.openkoala.koala.util.KoalaEntityRepositoryJpa">
		<property name="entityManager">
			<bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
				<property name="persistenceUnitName" value="opencis" />
			</bean>
		</property>
	</bean>

	<bean id="queryChannel" class="org.openkoala.koala.util.KoalaQueryChannelServiceJpa">
		<property name="entityManager">
			<bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
				<property name="persistenceUnitName" value="opencis" />
			</bean>
		</property>
	</bean>

	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
		<property name="driver" value="${jdbc.driverClassName}" />
		<property name="driverUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="prototypeCount" value="5" />
		<property name="maximumConnectionCount" value="50" />
		<property name="minimumConnectionCount" value="10" />
		<property name="houseKeepingTestSql" value="select 1" />
		<property name="testBeforeUse" value="true" />
		<property name="alias" value="opencis" />
	</bean>
	
	
	
</beans>


















<!-- 
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	SessionFactory, DataSource, etc. omitted

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.xiaokaceng.openci.domain</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
	</bean>

	<context:annotation-config />

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="repositoryOperation"
			expression="execution(* com.xiaokeceng.openci.application.impl.*Application.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="repositoryOperation" />
	</aop:config>

	<bean id="repository" class="com.dayatang.hibernate.EntityRepositoryHibernate"/>
	
	<bean id="queryChannel" class="com.dayatang.querychannel.service.impl.QueryChannelServiceHibernate"/>
	
	<bean id="openciApplication" class="com.xiaokaceng.openci.application.impl.OpenciApplicationImpl" />
	
	<bean id="projectApplication" class="com.xiaokaceng.openci.application.impl.ProjectApplicationImpl" />
	
	<bean id="developerApplication" class="com.xiaokaceng.openci.application.impl.DeveloperApplicationImpl" />
	<bean id="toolConfigurationApplication" class="com.xiaokaceng.openci.application.impl.ToolConfigurationApplicationImpl" />
	
    <bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10"/>
        <property name="maxPoolSize" value="50"/>
        <property name="queueCapacity" value="1000"/>
        <property name="keepAliveSeconds" value="300"/>
        <property name="rejectedExecutionHandler">
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>
	
</beans> -->
